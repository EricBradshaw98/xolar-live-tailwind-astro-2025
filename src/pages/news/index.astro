---
import Layout from '../../layouts/Layout.astro';
import { mockNews } from '../../data/mockNews.js';

const categories = ['All', 'Policy', 'Technology', 'Research', 'Education'];
---

<Layout
  title="Solar Energy News & Updates | Xolar Inc."
  description="Stay informed with the latest solar energy news, policy updates, technology breakthroughs, and educational content from Canada's leading solar experts."
  keywords="solar news Canada, solar technology updates, renewable energy news, solar policy, solar research"
>
  <!-- Hero Section -->
  <section class="bg-gradient-to-br from-blue-50 to-green-50 py-16 lg:py-24">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
          Solar Energy <span class="text-primary-600">News & Insights</span>
        </h1>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto">
          Stay informed with the latest updates on solar technology, policy changes, research
          breakthroughs, and expert insights from Canada's solar industry leaders.
        </p>
      </div>
    </div>
  </section>

  <!-- Category Filter -->
  <section class="bg-white border-b border-gray-200 sticky top-0 z-40">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
      <div class="flex flex-wrap items-center justify-center gap-3">
        {
          categories.map((category) => (
            <button
              class="category-filter px-6 py-2 rounded-full text-sm font-medium transition-colors duration-200 border-2"
              data-category={category}
            >
              {category}
            </button>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Featured Article -->
  {
    mockNews[0] && (
      <section class="py-12 lg:py-16 bg-white">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex items-center gap-2 mb-8">
            <svg class="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
            </svg>
            <h2 class="text-2xl font-bold text-gray-900">Featured Article</h2>
          </div>
          <a
            href={`/news/${mockNews[0].slug}`}
            class="group block bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300"
          >
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
              <div class="relative h-64 lg:h-auto">
                <img
                  src={mockNews[0].featuredImage}
                  alt={mockNews[0].title}
                  class="absolute inset-0 w-full h-full object-cover"
                />
                <div class="absolute top-4 left-4">
                  <span class="px-4 py-2 bg-primary-600 text-white text-sm font-medium rounded-full">
                    {mockNews[0].category}
                  </span>
                </div>
              </div>
              <div class="p-8 flex flex-col justify-center">
                <div class="flex items-center space-x-4 text-sm text-gray-600 mb-4">
                  <span>{mockNews[0].publishedDate}</span>
                  <span>•</span>
                  <span>{mockNews[0].readTime}</span>
                </div>
                <h3 class="text-3xl font-bold text-gray-900 mb-4 group-hover:text-primary-600 transition-colors duration-200">
                  {mockNews[0].title}
                </h3>
                <p class="text-gray-600 text-lg mb-6">{mockNews[0].excerpt}</p>
                <div class="flex items-center justify-between">
                  <div>
                    <p class="font-medium text-gray-900">{mockNews[0].author}</p>
                    <p class="text-sm text-gray-600">{mockNews[0].authorTitle}</p>
                  </div>
                  <svg
                    class="w-6 h-6 text-primary-600 group-hover:translate-x-2 transition-transform duration-200"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 5l7 7-7 7"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </a>
        </div>
      </section>
    )
  }

  <!-- Articles Grid -->
  <section class="py-12 lg:py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="articles-grid">
        {
          mockNews.slice(1).map((article) => (
            <article
              class="article-card bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-lg transition-shadow duration-300 flex flex-col"
              data-category={article.category}
            >
              <a href={`/news/${article.slug}`} class="block">
                <div class="relative h-48 overflow-hidden">
                  <img
                    src={article.featuredImage}
                    alt={article.title}
                    class="w-full h-full object-cover transform hover:scale-105 transition-transform duration-300"
                  />
                  <div class="absolute top-4 left-4">
                    <span class="px-3 py-1 bg-white text-primary-600 text-xs font-medium rounded-full shadow-sm">
                      {article.category}
                    </span>
                  </div>
                </div>
                <div class="p-6 flex flex-col flex-1">
                  <div class="flex items-center space-x-3 text-xs text-gray-600 mb-3">
                    <span>{article.publishedDate}</span>
                    <span>•</span>
                    <span>{article.readTime}</span>
                  </div>
                  <h3 class="text-xl font-bold text-gray-900 mb-3 hover:text-primary-600 transition-colors duration-200 line-clamp-2">
                    {article.title}
                  </h3>
                  <p class="text-gray-600 mb-4 line-clamp-3 flex-1">{article.excerpt}</p>
                  <div class="flex items-center justify-between pt-4 border-t border-gray-100">
                    <div>
                      <p class="font-medium text-sm text-gray-900">{article.author}</p>
                      <p class="text-xs text-gray-600">{article.authorTitle}</p>
                    </div>
                    <svg
                      class="w-5 h-5 text-primary-600"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"
                      />
                    </svg>
                  </div>
                </div>
              </a>
            </article>
          ))
        }
      </div>

      <!-- Empty State -->
      <div id="empty-state" class="hidden text-center py-16">
        <svg
          class="w-16 h-16 mx-auto text-gray-400 mb-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M12 12h.01M12 12h.01M12 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
          />
        </svg>
        <h3 class="text-lg font-medium text-gray-900 mb-2">No articles found</h3>
        <p class="text-gray-600">Try selecting a different category</p>
      </div>
    </div>
  </section>

  <!-- Newsletter CTA -->
  <section class="py-16 lg:py-24 bg-primary-600">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="text-3xl md:text-4xl font-bold text-white mb-4">
        Stay Updated on Solar News
      </h2>
      <p class="text-xl text-primary-100 mb-8">
        Subscribe to our newsletter for monthly updates on solar technology, policy changes, and
        industry insights.
      </p>
      <form class="flex flex-col sm:flex-row gap-4 max-w-xl mx-auto">
        <input
          type="email"
          placeholder="Enter your email"
          class="flex-1 px-6 py-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-white"
          required
        />
        <button
          type="submit"
          class="px-8 py-4 bg-white text-primary-600 font-semibold rounded-lg hover:bg-gray-50 transition-colors duration-200"
        >
          Subscribe
        </button>
      </form>
    </div>
  </section>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const categoryButtons = document.querySelectorAll('.category-filter');
    const articleCards = document.querySelectorAll('.article-card');
    const emptyState = document.getElementById('empty-state');
    const articlesGrid = document.getElementById('articles-grid');

    // Set initial active state
    categoryButtons[0]?.classList.add('bg-primary-600', 'text-white', 'border-primary-600');
    categoryButtons.forEach((btn, index) => {
      if (index !== 0) {
        btn.classList.add('bg-white', 'text-gray-700', 'border-gray-300', 'hover:border-primary-500', 'hover:text-primary-600');
      }
    });

    categoryButtons.forEach((button) => {
      button.addEventListener('click', () => {
        const selectedCategory = (button as HTMLElement).dataset.category;

        // Update active button state
        categoryButtons.forEach((btn) => {
          btn.classList.remove('bg-primary-600', 'text-white', 'border-primary-600');
          btn.classList.add('bg-white', 'text-gray-700', 'border-gray-300', 'hover:border-primary-500', 'hover:text-primary-600');
        });
        button.classList.remove('bg-white', 'text-gray-700', 'border-gray-300', 'hover:border-primary-500', 'hover:text-primary-600');
        button.classList.add('bg-primary-600', 'text-white', 'border-primary-600');

        // Filter articles
        let visibleCount = 0;
        articleCards.forEach((card) => {
          const cardCategory = (card as HTMLElement).dataset.category;
          if (selectedCategory === 'All' || cardCategory === selectedCategory) {
            (card as HTMLElement).style.display = 'block';
            visibleCount++;
          } else {
            (card as HTMLElement).style.display = 'none';
          }
        });

        // Show/hide empty state
        if (visibleCount === 0) {
          articlesGrid?.classList.add('hidden');
          emptyState?.classList.remove('hidden');
        } else {
          articlesGrid?.classList.remove('hidden');
          emptyState?.classList.add('hidden');
        }
      });
    });
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
