---
import '../styles/global.css';
import { UserButton } from '@clerk/astro/components';
import xolarLogo from '../assets/XOLARLARGE.webp';

interface Props {
  title: string;
  activePage?: string;
}

const { title, activePage } = Astro.props;

const navigation = [
  { name: 'Dashboard', href: '/admin', icon: 'dashboard' },
  { name: 'Projects', href: '/admin/projects', icon: 'projects' },
  { name: 'Bids', href: '/admin/bids', icon: 'bids' },
  { name: 'Installers', href: '/admin/installers', icon: 'users' },
];

const currentPath = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="noindex, nofollow" />
    <meta name="googlebot" content="noindex, nofollow" />
    <title>{title} | Xolar Admin</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body class="bg-gray-50 overflow-x-hidden">
    <!-- Admin Header -->
    <header class="bg-white border-b-2 border-primary-500 sticky top-0 z-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
          <div class="flex items-center space-x-4">
            <!-- Mobile Menu Button -->
            <button
              id="mobile-menu-btn"
              class="lg:hidden p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200"
              aria-label="Toggle menu"
            >
              <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
            <a href="/admin" class="flex items-center">
              <img
                src={xolarLogo.src}
                alt="Xolar Admin"
                class="h-8 lg:h-10 w-auto"
                width={xolarLogo.width}
                height={xolarLogo.height}
              />
            </a>
          </div>
          <div class="flex items-center space-x-4">
            <UserButton afterSignOutUrl="/" />
          </div>
        </div>
      </div>
    </header>

    <div class="flex min-h-screen relative">
      <!-- Mobile Overlay -->
      <div id="mobile-overlay" class="hidden fixed inset-0 backdrop-blur-sm bg-white/30 z-40 lg:hidden transition-opacity duration-300"></div>

      <!-- Sidebar -->
      <aside
        id="sidebar"
        class="fixed lg:sticky top-16 left-0 w-64 bg-white border-r border-gray-200 h-[calc(100vh-4rem)] overflow-y-auto z-40 transform -translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out lg:flex-shrink-0"
      >
        <nav class="p-4 space-y-1">
          {
            navigation.map((item) => {
              const isActive = currentPath === item.href || currentPath.startsWith(item.href + '/');
              return (
                <a
                  href={item.href}
                  class={`flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-colors duration-200 ${
                    isActive
                      ? 'bg-primary-50 text-primary-700'
                      : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'
                  }`}
                >
                  {item.icon === 'dashboard' && (
                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
                      />
                    </svg>
                  )}
                  {item.icon === 'projects' && (
                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
                      />
                    </svg>
                  )}
                  {item.icon === 'bids' && (
                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"
                      />
                    </svg>
                  )}
                  {item.icon === 'users' && (
                    <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"
                      />
                    </svg>
                  )}
                  {item.name}
                </a>
              );
            })
          }
        </nav>
      </aside>

      <!-- Main Content -->
      <main class="flex-1 w-full min-w-0 p-4 lg:p-8">
        <div class="max-w-7xl mx-auto w-full">
          <slot />
        </div>
      </main>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuBtn = document.getElementById('mobile-menu-btn');
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('mobile-overlay');

        function toggleMenu() {
          const isOpen = !sidebar?.classList.contains('-translate-x-full');

          if (isOpen) {
            sidebar?.classList.add('-translate-x-full');
            overlay?.classList.add('hidden');
          } else {
            sidebar?.classList.remove('-translate-x-full');
            overlay?.classList.remove('hidden');
          }
        }

        mobileMenuBtn?.addEventListener('click', toggleMenu);
        overlay?.addEventListener('click', toggleMenu);

        // Close menu on navigation
        const navLinks = sidebar?.querySelectorAll('a');
        navLinks?.forEach(link => {
          link.addEventListener('click', () => {
            if (window.innerWidth < 1024) {
              toggleMenu();
            }
          });
        });
      });
    </script>
  </body>
</html>
